# initContainer 'init-sites-volume', mountPath: /data
# initContainer 'init-sites-volume', Command: [ "/bin/bash", "-c" ], initContainer: Args: [ 'cp -r /var/www/html/sites/
# /data/; chown www-data:www-data /data/ -R' ]
--- 
apiVersion: apps/v1
kind: Deployment
metadata: 
  name: drupal
  labels:
    app: drupal
spec: 
  replicas: 1
  selector: 
    matchLabels: 
      app: drupal
      tier: frontend
  template: 
    metadata:
      labels:
        app: drupal
        tier: frontend
    spec: 
      initContainers:
      - name: init-sites-volume
        image: drupal:8.6
        command: [ "/bin/bash", "-c"]
        args: [ 'cp -r /var/www/html/sites/ /data/; chown www-data:www-data /data/ -R' ]
      containers: 
      - image: drupal:8.6
        name: drupal
        env:
          - name: MYSQL_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: drupal-mysql-secret
                key: MYSQL_ROOT_PASSWORD
          - name: MYSQL_DATABASE
            valueFrom:
              secretKeyRef:
                name: drupal-mysql-secret
                key: MYSQL_DATABASE
          - name: MYSQL_USER
            valueFrom:
              secretKeyRef:
                name: drupal-mysql-secret
                key: MYSQL_USER
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts: 
        - mountPath: /var/www/html/modules
          name: drupal-data
          subPath: modules
        - mountPath: /var/www/html/profiles
          name: drupal-data
          subPath: profiles
        - mountPath: /var/www/html/sites
          name: drupal-data
          subPath: sites
        - mountPath: /var/www/html/themes
          name: drupal-data
          subPath: themes
        - mountPath: /data
          name: drupal-data
      volumes: 
      - name: drupal-data
        persistentVolumeClaim: 
          claimName: drupal-pvc

